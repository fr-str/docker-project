// Code generated by "stringer -type=Type er/errorki.go"; DO NOT EDIT.

package er

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OK-200]
	_ = x[NotFound-100]
	_ = x[Missing-300]
	_ = x[Forbbiden-400]
	_ = x[Timeout-500]
	_ = x[InternalServerError-1000]
	_ = x[ReqID-1]
	_ = x[Action-2]
	_ = x[ContainerName-3]
	_ = x[Container-4]
	_ = x[UntilInLive-5]
}

const (
	_Type_name_0 = "ReqIDActionContainerNameContainerUntilInLive"
	_Type_name_1 = "NotFound"
	_Type_name_2 = "OK"
	_Type_name_3 = "Missing"
	_Type_name_4 = "Forbbiden"
	_Type_name_5 = "Timeout"
	_Type_name_6 = "InternalServerError"
)

var (
	_Type_index_0 = [...]uint8{0, 5, 11, 24, 33, 44}
)

func (i Type) String() string {
	switch {
	case 1 <= i && i <= 5:
		i -= 1
		return _Type_name_0[_Type_index_0[i]:_Type_index_0[i+1]]
	case i == 100:
		return _Type_name_1
	case i == 200:
		return _Type_name_2
	case i == 300:
		return _Type_name_3
	case i == 400:
		return _Type_name_4
	case i == 500:
		return _Type_name_5
	case i == 1000:
		return _Type_name_6
	default:
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
